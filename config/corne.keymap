/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&gresc { keep-mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>; };

/ {
    combos {
        compatible = "zmk,combos";

        shift_caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <24 35>;
            layers = <0>;
        };
    };

    behaviors {
        ctrl_grave_esc: ctrl_grave_esc {
            compatible = "zmk,behavior-hold-tap";
            label = "CTRL_GRAVE_ESC";
            bindings = <&kp>, <&gresc>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        bksp_del: bksp_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSP_DEL";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB                  &kp Q  &kp W  &kp E     &kp R     &kp T          &kp Y        &kp U                &kp I                      &kp O    &kp P     &bksp_del
&ctrl_grave_esc LCTRL 0  &kp A  &kp S  &kp D     &kp F     &kp G          &kp H        &kp J                &kp K                      &kp L    &kp SEMI  &kp SQT
&kp LSHFT                &kp Z  &kp X  &kp C     &kp V     &kp B          &kp N        &kp M                &kp COMMA                  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                                       &kp LALT  &kp LCMD  &lt 1 SPACE    &lt 2 SPACE  &mt C_MUTE C_VOL_DN  &mt C_PLAY_PAUSE C_VOL_UP
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6    &kp N7  &kp N8      &kp N9      &kp N0    &kp MINUS  &kp EQUAL
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &kp GRAVE   &kp LBKT  &kp RBKT   &kp BSLH
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans      &trans      &trans    &trans     &trans
                        &trans  &trans  &trans    &trans  &kp C_PREV  &kp C_NEXT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8    &kp F9    &kp F10  &kp F11    &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &bt BT_NXT
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans   &trans     &bt BT_CLR
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };
    };
};
